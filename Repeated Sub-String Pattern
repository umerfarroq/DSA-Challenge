class Solution {
public:
    bool repeatedSubstringPattern(string s) {
        vector<int>lps(s.size(),0);
        int pre=0,suf=1;
        int  n= s.size();

        while(suf<s.size())
        {
            if(s[pre]==s[suf])
            {
                lps[suf]=pre+1;
                pre++,suf++;
            }

            else
            {
                if(pre==0)
                {
                    lps[suf]=0;
                    suf++;
                }
                else
                {
                    pre=lps[pre-1];
                }
                
            }
        }
        // int count=0;

        int longestprefix=lps[s.size()-1];
        if(longestprefix > 0 && s.size()%(s.size()-longestprefix) ==0)
        return true;


        return false;

        // for(int i=0;i<lps.size();i++)
        // {
        //     if(lps[i]==0)
        //     {
        //         count++;
        //     }
        // }
        // if(s.size()%count==0)
        // {
        //     return true;
        // }
        // else
        // {
        //     return false;
        // }

        
        
    }
};
